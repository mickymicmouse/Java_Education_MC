Test
1. 접근 제한자
키워드 : public, private, protected, default
각 키워드의 접근 범위 : 
public - 모든 클래스
private - 클래스 내에서만
protected - 패키지 내부의 클래스와 외부 패키지의 클래스 중에서 상속받은 클래스에서 접근 가능
default(package) - 패키지 안에서만

2. 연산자
나머지 연산자의 기호 : %
= 연산자의 이름은 : 할당/대입 연산자
	연산방향 : 오른쪽에서 왼쪽으로
	필요한 피연산자의 개수는 : 2개(2항 연산자)
x = x+1의 문장을 간략히 나타내시오 :
	방법1 : x+=1
	방법2 :  x++ or ++x
x=10일 때
	x++의 값은 : 11
	++x의 값은 : 11

3. 생성자
class Test{} 의 기본 생성자를 코드로 작성하시오 : public Test(){}
생성자 규칙을 아는대로 작성하시오 : 접근제한자 클래스이름(매개변수) {this.클래스 변수 = 매개변수}
	클래스 이름을 그대로 사용한다.
	다른 생성자가 없을 시 기본 생성자를 제공한다.
	다른 생성자가 있다면, 기본 생성자는 제공하지 않는다.
	
	접근 제한자가 private도 가능하다.
	static은 가능하지 않다 -> 인스턴스가 아니다(static)
	필드의 초기화에 사용한다.

4. 클래스
클래스의 구성요소 : 필드(멤버변수), 생성자, 메소드
	주의할 점 : 지역변수는 클래스의 멤버가 아니다. 
 	해당 블록(메소드, 제어문(반복문, 조건문, 기타))에서만 사용가능하므로 
class Test{} 의 인스턴스 생성 코드를 작성하시오 : Test t = new Test();

5. 클래스 vs 인스턴스
클래스 변수와 인스턴스 변수를 구분하여 설명하시오
	클래스 변수 : 
		static이 붙게 되면 클래스 변수가 되고
		인스턴스 상태에서도 접근 가능, 고정되어 있다.
	인스턴스 변수 : 
		키워드가 따로 없다. 
		클래스상태에서 접근 불가
		무조건 인스턴스가 되어야 접근 가능
		변경 가능하다.

6. Identifier(이름) 작성 규칙
이름 작성 시 사용할 수 있는 특수 문자
	_, $
	이름의 처음에 특수문자 올 수 있음

이름 작성 시 주의해야 하는 것
	영 대소문자가 제일 첫 글자가 되어야 한다.
	숫자가 제일 첫글자가 되면 안된다.
	중간에 빈공백이 오면 안된다.

7. 기본 데이터 형
8가지 기본형의 키워드 : char, byte, short, long, int, float, double, boolean
해당 데이터 타입의 리터럴을 표현할 때 사용하는 기호를 이용해 각 데이터 타입의 변수를 선언하고 초기화 값을 할당
	char a = 'A';
	byte b = 1;
	short c = 1;
	int d = 1
	long e = 10L;
	float f = 0.3f;
	double g = 3.14;
	boolean h = true or false; 

8. 배열
배열을 사용하는 의미 : 같은 종류의 데이터를 집합으로 다루기 위해, 여러개의 변수를 사용하면 불편
int형으로 데이터를 3개 저장하는 vals 라는 배열을 선언하고 기본 값으로 초기화
	방법 1 : 데이터를 알고 있는 경우 - int[] vals = {1,2,3};
	방법 2 : 데이터를 모르는 경우 - int[] vals = new int[3];

9. 컴파일과 실행
컴파일 -> 문장이 문법에 맞게 작성되어 있는가?
	바이트 코드 생성, 확장자가 class인 중간 코드가 생성
실행 -> 생성된 바이트 코드가 JVM(실행환경)에서 동작
	실행 에러가 발생할 가능성이 있다.
	예외 사항이라고 한다.